// https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "sqlite"
  url          = "file:./db/prod.db"
  relationMode = "prisma"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}


model Role {
  id   String    @id @default(uuid())
  user User[]
  role String
}

model User {
  id String @id @default(uuid())

  name          String
  image         String?
  roles         Role[]

  accounts   Account[]
  sessions   Session[]

  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

}

model Post {
  id             String     @id @default(uuid())
  title          String     @unique
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  published      Boolean    @default(true)
  overview       String?
  content        String? 
  authorId       String?
  img            String?
  imgDescription String?
  hash           String    @unique
  path           String    @unique
  // wordWeight     String?
  tags           Tag[]

}

model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
}
